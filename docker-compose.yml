services:

  config-server:
    build:
      context: ./configServer
    image: configserver:latest
    ports:
      - "8888:8888"
    networks:
      - backend
    environment:
      - spring.application.name=configServer
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s

  service-discovery:
    build:
      context: ./ServiceDiscovery
    image: servicediscovery:latest
    ports:
      - "8761:8761"
    networks:
      - backend
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - spring.profiles.active=default
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 7s

  commerce-gateway:
    build:
      context: ./Gateway
    image: gateway:latest
    ports:
      - "8080:8080"
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - backend
    environment:
      - eureka.client.register-with-eureka=true
      - eureka.client.fetch-registry=true
      - spring.cloud.gateway.discovery.locator.enabled=true
      - spring.cloud.gateway.discovery.locator.lower-case-service-id=true
      - eureka.client.serviceUrl.defaultZone=http://service-discovery:8761/eureka/
      - flyway.schemas=gateway
      - flyway.defaultSchema=gateway
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 8s

  product-service:
    build:
      context: ./ProductService
    image: productservice:latest
    ports:
      - "8081:8081"
    depends_on:
      commerce-gateway:
        condition: service_healthy
    networks:
      - backend
    environment:
      - server.port=8081
      - spring.application.name=productService
      - eureka.client.serviceUrl.defaultZone=http://service-discovery:8761/eureka/
      - spring.config.import=configserver:http://config-server:8888

  commerce-orders:
    build:
      context: ./OrderService
    image: orderservice:latest
    ports:
      - "8082:8082"
    depends_on:
      commerce-gateway:
        condition: service_healthy
    networks:
      - backend
    environment:
      - server.port=8082
      - spring.application.name=orderService
      - eureka.client.serviceUrl.defaultZone=http://service-discovery:8761/eureka/
      - spring.config.import=configserver:http://config-server:8888

networks:
  backend:
    driver: bridge
